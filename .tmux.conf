#
# Based on Example .tmux.conf

# Some tweaks to the status line
set -g status-right "%H:%M"
set -g window-status-current-attr "underscore"

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg red
%endif

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM 
set -g default-terminal "rxvt-unicode-256color"

# No bells at all
set -g bell-action none

# Keep windows around after they exit
set -g remain-on-exit on

# Change the prefix key to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

bind | split-window -h
bind - split-window -v

# Some extra key bindings to select higher numbered windows
#bind F1 selectw -t:10
#bind F2 selectw -t:11
#bind F3 selectw -t:12
#bind F4 selectw -t:13
#bind F5 selectw -t:14
#bind F6 selectw -t:15
#bind F7 selectw -t:16
#bind F8 selectw -t:17
#bind F9 selectw -t:18
#bind F10 selectw -t:19
#bind F11 selectw -t:20
#bind F12 selectw -t:21
#
# Keys to toggle monitoring activity in a window, and synchronize-panes
#bind m set monitor-activity
#bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'
#
## Create a single default session, because a session is created here, tmux
## should be started with "tmux attach" rather than "tmux new"
#new -d -s0 -nirssi 'exec irssi'
#set -t0:0 monitor-activity on
#set  -t0:0 aggressive-resize on
#neww -d -ntodo 'exec emacs ~/TODO'
#setw -t0:1 aggressive-resize on
#neww -d -nmutt 'exec mutt'
#setw -t0:2 aggressive-resize on
#neww -d
#neww -d
#neww -d

#Vim key bindings for edit line
set-window-option -g mode-keys vi

#vim-tmux-navigator
#use vim <C-h/j/k/l> to navigate tmux splits as well as vim
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

set -g status-left "#[fg=white]#S "
set -g status-right "#[fg=white] %d %b %Y %H:%M"

run-shell "powerline-daemon -q"
# source "/usr/local/lib/python3.5/dist-packages/powerline/bindings/tmux/powerline.conf"

